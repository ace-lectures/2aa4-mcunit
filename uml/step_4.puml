@startuml

!include ./common.style

class Main {
    + {static} main(args: String[])
}

package mcunit {

    class Assertions {
        + {static} assertTrue(c: bool)
        + {static} assertFalse(c: bool)
        + {static} assertEquals(o1: Object, o2: Object)
    }   

    interface Test {
        + run(collector: TestReport)
    }

    abstract class TestCase implements Test {
        + <<final>> run(collector: TestReport)
        --
        # setUp()
        # tearDown()
        --
        # {abstract} test()
    }

    class TestSuite implements Test {
        + <<final>> run(collector: TestReport)
        --
        + add(test: Test)
    }


    enum STATUS {
        + PASSED
        + FAILED
        + ERRORED
    }

    class TestResult {
        - name: String
        --
        + this(name: String)
        --
        + record(status: STATUS)
        + status(): STATUS
        --
        + toString(): String
    }

    STATUS <--* TestResult

    class TestReport {
        + this()
        --
        + collect(result: TestResult)
        --
        + toString(): String
    }

    TestReport *--> "*" TestResult
    TestResult <. TestCase
    Test "*" <--* TestSuite
}

package tests {
    class IntegerTests 
    class AddTwoIntegers <<private>> {
        # <<override>> test()
    }
    class SubtractTwoIntegers <<private>> {
        # <<override>> test()
    }
    class ThrowAnException <<private>> {
        # <<override>> test()
    }

    ThrowAnException <--+ IntegerTests
    SubtractTwoIntegers <--+ IntegerTests
    AddTwoIntegers <--+ IntegerTests

}

TestCase <|-- tests.AddTwoIntegers 
TestCase <|-- tests.SubtractTwoIntegers 
TestCase <|-- tests.ThrowAnException
TestSuite <|-- IntegerTests

Main ..> IntegerTests
Main .> TestReport
TestReport .[hidden] Assertions

note as N1 
 Size: 
   - Main: 12 LoCs
   - mcunit: 102 LoCs
   - tests: 41 LocS
endnote

N1 .[hidden]. tests

@enduml